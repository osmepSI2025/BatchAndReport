@page
@model SMEDashboardModel
@{
    Layout = "_Layout1";
    ViewData["Title"] = "SME Dashboard";
}
<div class="container">
    <div class="row g-4">
        <div class="col-md-6">
            <div class="card shadow-sm p-3" style="min-height: 380px;">
                <h5>โครงการตามงบประมาณ</h5>
                <canvas id="budgetChart" height="250"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow-sm p-3" style="min-height: 380px;">
                <h5>โครงการตามประเด็นการส่งเสริม</h5>
                <canvas id="supportChart" height="250"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow-sm p-3" style="min-height: 380px;">
                <h5>โครงการตามประเภท</h5>
                <canvas id="typeChart" height="250" style="width:100% !important;"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow-sm p-3" style="min-height: 380px;">
                <h5>โครงการตามภูมิภาค</h5>
                <canvas id="regionChart" height="250"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <script>
        const dashboardData = {
            BudgetChart: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.BudgetChart)),
            SupportChart: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SupportChart)),
            TypeChart: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TypeChart)),
            RegionChart: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.RegionChart))
        };

        new Chart(document.getElementById('budgetChart').getContext('2d'), {
            type: 'bar',
            data: {
                labels: dashboardData.BudgetChart.map(x => x.Year),
                datasets: [
                    {
                        label: 'งบประมาณที่ขอ',
                        data: dashboardData.BudgetChart.map(x => x.RequestBudget),
                        backgroundColor: '#D4ECFD'
                    },
                    {
                        label: 'งบประมาณที่ผ่านการพิจารณา',
                        data: dashboardData.BudgetChart.map(x => x.ApproveBudget),
                        backgroundColor: '#247CB3'
                    }
                ]
            }
        });

        new Chart(document.getElementById('supportChart').getContext('2d'), {
            type: 'bar',
            data: {
                labels: dashboardData.SupportChart.map(x => x.Issue),
                datasets: [{
                    label: 'จำนวนโครงการ',
                    data: dashboardData.SupportChart.map(x => x.Count),
                    backgroundColor: ['#D4ECFD', '#B7DCF6', '#9ACCEC', '#70AFDC', '#4A94CB', '#247CB3']
                }]
            },
            options: {
                plugins: { legend: { display: false } },
                scales: { y: { beginAtZero: true, max: 100 } }
            }
        });

        new Chart(document.getElementById('typeChart').getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: dashboardData.TypeChart.map(x => x.Type),
                datasets: [{
                    label: 'ประเภทโครงการ',
                    data: dashboardData.TypeChart.map(x => x.Percent),
                    backgroundColor: ['#D4ECFD', '#9ACCEC', '#4A94CB', '#247CB3']
                }]
            }
        });

        new Chart(document.getElementById('regionChart').getContext('2d'), {
            type: 'bar',
            data: {
                labels: dashboardData.RegionChart.map(x => x.Region),
                datasets: [{
                    label: 'จำนวนโครงการ',
                    data: dashboardData.RegionChart.map(x => x.Count),
                    backgroundColor: ['#D4ECFD', '#B7DCF6', '#9ACCEC', '#70AFDC', '#4A94CB', '#247CB3']
                }]
            },
            options: {
                plugins: { legend: { display: false } },
                scales: { y: { beginAtZero: true, max: 100 } }
            }
        });
    </script>
}
